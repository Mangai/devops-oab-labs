---
- name: Solve Lab 6
  hosts: localhost
  gather_facts: false
  run_once: true
  vars_files:
  - ../vars.yml
      
  tasks:
    - name: check if apb installed
      shell: command -v apb >/dev/null 2>&1

    - name: login as admin
      shell: "oc login -u {{ openshift_admin_user }} -p {{ openshift_admin_password }}"

    - name: create temporary git directory
      tempfile:
        state: directory
        prefix: apb-git
      register: git_dir

    - name: clone solutions git repository to {{ git_dir.path }}
      shell: "git clone http://{{ gogs_user }}:{{ gogs_password }}@{{ gogs_hostname }}/{{ gogs_user }}/cd-infra.git"
      args:
        chdir: "{{ git_dir.path }}"

    - name: unarchive projects source archive
      unarchive:
        remote_src: yes
        src: "https://github.com/{{ github_account }}/devops-oab-labs/archive/{{ github_ref }}.tar.gz"
        dest: "{{ git_dir.path }}"

    - name: build apb
      shell: "apb build"
      args:
        chdir: "{{ git_dir.path }}/devops-oab-labs-{{ github_ref }}/mysql-digital-ocean-apb"

    - name: push apb to service broker
      shell: "apb push --registry-route {{ openshift_registry }}"
      args:
        chdir: "{{ git_dir.path }}/devops-oab-labs-{{ github_ref }}/mysql-digital-ocean-apb"

    - name: process service instance 
      template:
        src: serviceinstance.yml.j2
        dest: "{{ git_dir.path }}/serviceinstance.yml"

    - name: provision digitalocean mysql from service catalog
      shell: "oc create -f {{ git_dir.path }}/serviceinstance.yml -n {{ stage_project }}"
      ignore_errors: true

    - name: wait till digitalocean mysql is provisioned
      shell: "oc get serviceinstance catalog-digitalocean-mysql-instance -n {{ stage_project }} -o jsonpath=\"{.status.conditions[?(@.reason == 'ProvisionedSuccessfully')]}\""
      register: serviceinstance_json
      until: serviceinstance_json.stdout|trim() != ''
      retries: "30"
      delay: "30"

    - name: create service binding and secret
      shell: "oc create -f servicebinding.yml -n {{ stage_project }}"
      ignore_errors: true

    - name: replace catalog configmap
      shell: "oc replace -f configmap.yml -n {{ stage_project }}"
      ignore_errors: true

    - name: set env vars from secret on catalog deployment
      shell: "oc env --from=secret/digitalocean-mysql-credentials --prefix=APB_ dc/catalog -n {{ stage_project }}"
      ignore_errors: true

    - name: login as student
      shell: "oc login -u {{ openshift_user }}"