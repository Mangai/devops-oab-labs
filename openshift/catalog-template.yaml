apiVersion: v1
kind: Template
metadata:
  annotations:
    description: CoolStore Microservices - Catalog Service Template
    iconClass: icon-java
    tags: microservice,jboss,spring
  name: catalog
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: catalog
    labels:
      app: coolstore
      component: catalog
  spec:
    tags:
    - name: latest
- apiVersion: v1
  kind: BuildConfig
  metadata:
    name: catalog
    labels:
      app: coolstore
      component: catalog
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: catalog:latest
    source:
      contextDir: ${GIT_CONTEXT_DIR}
      git:
        ref: ${GIT_REF}
        uri: ${GIT_URI}
      type: Git
    strategy:
      sourceStrategy:
        env:
        - name: MAVEN_MIRROR_URL
          value: ${MAVEN_MIRROR_URL}
        from:
          kind: ImageStreamTag
          name: redhat-openjdk18-openshift:1.2
          namespace: openshift
      type: Source
    triggers:
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: catalog
    labels:
      app: coolstore
      component: catalog
  spec:
    replicas: 1
    selector:
      deploymentconfig: catalog
    strategy:
      resources: {}
      type: Recreate
    template:
      metadata:
        labels:
          app: coolstore
          component: catalog
          deploymentconfig: catalog
        name: catalog
      spec:
        containers:
        - image: catalog
          imagePullPolicy: Always
          name: catalog
          ports:
          - containerPort: 8778
            name: jolokia
            protocol: TCP
          - containerPort: 8080
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 2
              memory: 2Gi
            requests:
              cpu: 100m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 75
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - catalog
        from:
          kind: ImageStreamTag
          name: catalog:latest
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: coolstore
      component: catalog
    name: catalog
  spec:
    ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      deploymentconfig: catalog
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: coolstore
      component: catalog
    name: catalog
  spec:
    to:
      kind: Service
      name: catalog
      weight: 100
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: catalog
    labels:
      app: coolstore
      component: catalog
  data:
    application.properties: |-
      spring.datasource.url=jdbc:mysql://catalog-mysql:3306/catalog
      spring.datasource.driver-class-name=com.mysql.jdbc.Driver
      spring.jpa.hibernate.ddl-auto=create
      spring.datasource.username=${DB_USERNAME}
      spring.datasource.password=${DB_PASSWORD}      
# Catalog Database
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      template.openshift.io/expose-uri: mysql://{.spec.clusterIP}:{.spec.ports[?(.name=="mysql")].port}
    name: catalog-mysql
    labels:
      component: catalog-mysql
      app: coolstore
  spec:
    ports:
    - name: mysql
      port: 3306
    selector:
      deploymentconfig: catalog-mysql
      component: catalog-mysql
      app: coolstore
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      template.alpha.openshift.io/wait-for-ready: "true"
    name: catalog-mysql
    labels:
      component: catalog-mysql
      app: coolstore
  spec:
    replicas: 1
    selector:
      deploymentconfig: catalog-mysql
      component: catalog-mysql
      app: catalog
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          deploymentconfig: catalog-mysql
          component: catalog-mysql
          app: coolstore
      spec:
        containers:
        - env:
          - name: MYSQL_USER
            value: ${DB_USERNAME}
          - name: MYSQL_PASSWORD
            value: ${DB_PASSWORD}
          - name: MYSQL_ROOT_PASSWORD
            value: ${DB_PASSWORD}
          - name: MYSQL_DATABASE
            value: catalog
          image: ' '
          imagePullPolicy: IfNotPresent
          livenessProbe:
            initialDelaySeconds: 30
            tcpSocket:
              port: 3306
            timeoutSeconds: 1
          name: mysql
          ports:
          - containerPort: 3306
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - MYSQL_PWD="$MYSQL_PASSWORD" mysql -h 127.0.0.1 -u $MYSQL_USER -D $MYSQL_DATABASE
                -e 'SELECT 1'
            initialDelaySeconds: 5
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
          volumeMounts:
          - mountPath: /var/lib/mysql/data
            name: catalog-mysql-data
        volumes:
        - name: catalog-mysql-data
          emptyDir: {}
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - mysql
        from:
          kind: ImageStreamTag
          name: mysql:5.7
          namespace: openshift
      type: ImageChange
    - type: ConfigChange
parameters:
- description: Git source URI for application e.g. https://github.com/openshift-labs/devops-oab-labs.git
  displayName: Git source repository
  name: GIT_URI
  required: true
- displayName: Git branch/tag reference
  name: GIT_REF
  required: true
  value: master
- displayName: Git Context Dir
  description: The subdirectory in the Git repository that contains the code e.g. catalog-spring-boot
  name: GIT_CONTEXT_DIR
  required: false
- description: Maven mirror url. If nexus is deployed locally, use nexus url (e.g. http://nexus.ci:8081/content/groups/public/)
  displayName: Maven mirror url
  name: MAVEN_MIRROR_URL
- description: Catalog Service database user name
  displayName: Catalog Database Username
  from: user[a-zA-Z0-9]{3}
  generate: expression
  name: DB_USERNAME
  required: true
- description: Catalog Service database user password
  displayName: Catalog Database Password
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  name: DB_PASSWORD
  required: true

  